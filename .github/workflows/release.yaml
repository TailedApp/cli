name: build-binary

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  pull_request:

permissions: read-all

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        job:
          - { target: aarch64-apple-darwin     , os: macos-latest  ,                  jreleaser_platform: osx-aarch_64   }
          - { target: x86_64-apple-darwin      , os: macos-latest  ,                  jreleaser_platform: osx-x86_64     }
          - { target: x86_64-pc-windows-msvc   , os: windows-latest,                  jreleaser_platform: windows-x86_64 }
          - { target: x86_64-unknown-linux-musl, os: ubuntu-latest ,                  jreleaser_platform: linux_musl-x86_64   }
          - { target: aarch64-unknown-linux-musl, os: ubuntu-latest , use-cross: true, jreleaser_platform: linux_musl-aarch_64 }
    runs-on: ${{ matrix.job.os }}
    steps:
      - uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: musl-tools # provides musl-gcc
          version: 1.0
        if: matrix.job.os == 'ubuntu-latest'

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.job.target }}
          override: true
          profile: minimal

      - uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.job.use-cross }}
          command: build
          args: --release --all-features --target=${{ matrix.job.target }}

      - name: jReleaser assemble
        uses: jreleaser/release-action@v2
        with:
          arguments: assemble
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          JRELEASER_PLATFORM_OVERRIDE: ${{ matrix.job.jreleaser_platform }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: |
            out/jreleaser/assemble/tailed/archive/*.zip

      - name: Upload JReleaser output
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jreleaser-${{ matrix.job.os }}
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties

  release:
    needs: [ build ]
    runs-on: windows-latest
    if: success() && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: jReleaser release
        uses: jreleaser/release-action@v2
        with:
          arguments: full-release -PartifactsDir=artifacts -PskipArchiveResolver
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          JRELEASER_CHOCOLATEY_API_KEY: ${{ secrets.CHOCOLATEY_KEY }}

      - name: Upload JReleaser output
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jreleaser-release
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties